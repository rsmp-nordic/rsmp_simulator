# This workflow will build RSMPGS1 and RSMPGS2 and create installer

name: Build installer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SXL: rsmp_schema/schemas/tlc/1.2.1/sxl.yaml
  SXL_1_2: rsmp_schema/schemas/tlc/1.2.0/sxl.yaml
  SXL_1_1: rsmp_schema/schemas/tlc/1.1.0/sxl.yaml
  SXL_1_0_15: rsmp_schema/schemas/tlc/1.0.15/sxl.yaml
  SXL_1_0_7: rsmp_schema/schemas/tlc/1.0.7/sxl.yaml
  SITE: YAML/SXL_Traffic_Controller_ver_1_2_1-site.yaml
  SITE_1_2: YAML/SXL_Traffic_Controller_ver_1_2-site.yaml
  SITE_1_1: YAML/SXL_Traffic_Controller_ver_1_1-site.yaml
  SITE_1_0_15: YAML/SXL_Traffic_Controller_ver_1_0_15-site.yaml
  SITE_1_0_7: YAML/SXL_Traffic_Controller_ver_1_0_7-site.yaml

jobs:
  create_sxl:
    name: Create SXL
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install python dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install xlsxwriter

      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install ruby dependencies
        run: gem install rubyXL

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout sxl-tools
        uses: actions/checkout@v4
        with:
          repository: rsmp-nordic/sxl-tools
          path: sxl-tools

      - name: Checkout rsmp_schema
        uses: actions/checkout@v4
        with:
          repository: rsmp-nordic/rsmp_schema
          path: rsmp_schema

      - name: Create XLSX template
        run: python sxl-tools/create_template.py

      - name: Adapt data types for Core 3.2
        run: |-
          # Remove any trailing _list because it is only used for comma
          # separated values during schema validation
          sed -i 's/_list$//g' $SXL
          sed -i 's/_list$//g' $SXL_1_2
          sed -i 's/_list$//g' $SXL_1_1
          sed -i 's/_list$//g' $SXL_1_0_15
          sed -i 's/_list$//g' $SXL_1_0_7

      - name: Create XLSX file
        run: |
          ruby sxl-tools/yaml2xlsx.rb \
            --template RSMP_Template_SignalExchangeList.xlsx \
            --sxl $SXL \
            --site $SITE --stdout > SXL-example.xlsx

      - name: Create CSV files
        run: ruby sxl-tools/xlsx2csv.rb SXL-example.xlsx

      - name: Create YAML file
        run: |
          # - Merges the alarms/statuses/commands from the rsmp_schema repo
          #   with the example objects into an YAML SXL.
          # - Converts JSON arrays from this format: [ value1, value2 ] to:
          #   - value1
          #   - value2
          #   The first format is not supported by the simulator.
          ruby sxl-tools/merge_yaml.rb --sxl $SXL --site $SITE > TLC_SXL_1_2_1.yaml
          # Also include older SXL files
          ruby sxl-tools/merge_yaml.rb --sxl $SXL --site $SITE > TLC_SXL_1_2.yaml
          ruby sxl-tools/merge_yaml.rb --sxl $SXL_1_1 --site $SITE_1_1 > TLC_SXL_1_1.yaml
          ruby sxl-tools/merge_yaml.rb --sxl $SXL_1_0_15 --site $SITE_1_0_15 > TLC_SXL_1_0_15.yaml
          ruby sxl-tools/merge_yaml.rb --sxl $SXL_1_0_7 --site $SITE_1_0_7 > TLC_SXL_1_0_7.yaml

      - name: Upload artifacts (XLSX)
        uses: actions/upload-artifact@v4
        with:
          name: SXL XLSX
          path: SXL-example.xlsx

      - name: Upload artifacts (YAML)
        uses: actions/upload-artifact@v4
        with:
          name: SXL YAML
          path: |
            TLC_SXL_1_2_1.yaml
            TLC_SXL_1_2.yaml
            TLC_SXL_1_1.yaml
            TLC_SXL_1_0_15.yaml
            TLC_SXL_1_0_7.yaml

      - name: Upload artifacts (CSV)
        uses: actions/upload-artifact@v4
        with:
          name: SXL CSV
          path: Objects/

  create_manual:
    name: Create manual
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rst2pdf
        run: pip install rst2pdf

      - name: Convert manual with rst2pdf
        run: |-
          rst2pdf Documents/Manual_RSMPGS1.rst
          rst2pdf Documents/Manual_RSMPGS2.rst

      - name: Upload Manual RSMPGS1
        uses: actions/upload-artifact@v4
        with:
          name: Manual RSMPGS1
          path: Documents/Manual_RSMPGS1.pdf

      - name: Upload Manual RSMPGS2
        uses: actions/upload-artifact@v4
        with:
          name: Manual RSMPGS2
          path: Documents/Manual_RSMPGS2.pdf

  setup:
    name: Create Installer
    runs-on: windows-2022
    needs: [create_sxl, create_manual ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build RSMPGS1 (Release)
        run: msbuild /p:Configuration=Release RSMPGS1/RSMPGS1.sln
        # path: RSMPGS1/bin/Release/RSMPGS1.exe

      - name: Build RSMPGS2 (Release)
        run: msbuild /p:Configuration=Release RSMPGS2/RSMPGS2.sln
        # path: RSMPGS2/bin/Release/RSMPGS2.exe

      - name: Download SXL CSV
        uses: actions/download-artifact@v4
        with:
          name: SXL CSV
          path: Objects

      - name: Download SXL YAML
        uses: actions/download-artifact@v4
        with:
          name: SXL YAML
          path: YAML

      - name: Download SXL Excel
        uses: actions/download-artifact@v4
        with:
          name: SXL XLSX
          path: YAML

      - name: Download Manual RSMPGS1
        uses: actions/download-artifact@v4
        with:
          name: Manual RSMPGS1
          path: Documents

      - name: Download Manual RSMPGS2
        uses: actions/download-artifact@v4
        with:
          name: Manual RSMPGS2
          path: Documents

      - name: Copy executables
        run: |
          copy RSMPGS1\bin\Release\RSMPGS1.exe .
          copy RSMPGS2\bin\Release\RSMPGS2.exe .

      - name: Building the installer (RSMPGS1)
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" /DRSMPGS1 "install_script.iss"
        shell: cmd

      - name: Building the installer (RSMPGS2)
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" /DRSMPGS2 "install_script.iss"
        shell: cmd

      - name: Upload setup files
        uses: actions/upload-artifact@v4
        with:
          name: Setup
          path: Output/*.exe

      - name: Upload setup zip file
        uses: actions/upload-artifact@v4
        with:
          name: Setup zip
          path: |
            RSMPGS1.exe
            RSMPGS2.exe
            Settings\
            Objects\
            YAML\
            Documents\
            !Documents\*.rst
            !Documents\img\
            !Output
